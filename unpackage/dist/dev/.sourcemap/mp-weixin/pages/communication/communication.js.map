{"version":3,"file":"communication.js","sources":["pages/communication/communication.vue","D:/HBuiderX/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tbXVuaWNhdGlvbi9jb21tdW5pY2F0aW9uLnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"main-container\">\r\n\t\t<view class=\"add-btn\" @click=\"handleAddChat\">\r\n\t\t\t<text class=\"btn-text\">+</text>\r\n\t\t</view>\r\n\t\t<scroll-view\r\n\t\t  class=\"chat-list\"\r\n\t\t  scroll-y\r\n\t\t  refresher-enabled\r\n\t\t>\r\n\t\t  <view \r\n\t\t    v-for=\"(chat, index) in chatList\"\r\n\t\t    :key=\"chat.id\"\r\n\t\t    class=\"chat-item\"\r\n\t\t    @click=\"handleChatClick(chat)\"\r\n\t\t  >\r\n\t\t    <!-- 头像 -->\r\n\t\t    <view class=\"avatar-wrapper\">\r\n\t\t      <image \r\n\t\t        class=\"avatar\" \r\n\t\t        :src=\"chat.avatar\" \r\n\t\t        mode=\"aspectFill\"\r\n\t\t      />\r\n\t\t    </view>\r\n\t\t\r\n\t\t    <view class=\"content\">\r\n\t\t      <view class=\"header\">\r\n\t\t        <text class=\"name\">{{ chat.username }}</text>\r\n\t\t        <text class=\"time\">{{ formatTime(chat.time) }}</text>\r\n\t\t      </view>\r\n\t\t\r\n\t\t      <!-- 消息 -->\r\n\t\t      <view class=\"preview\">\r\n\t\t        <text class=\"message\">{{ chat.lastMessage }}</text>\r\n\t\t        <view class=\"status\">\r\n\t\t          <!-- 未读消息 -->\r\n\t\t          <text \r\n\t\t            v-if=\"chat.unread > 0\"\r\n\t\t            class=\"badge\"\r\n\t\t          >\r\n\t\t            {{ chat.unread > 99 ? '99+' : chat.unread }}\r\n\t\t          </text>\r\n\t\t        </view>\r\n\t\t      </view>\r\n\t\t    </view>\r\n\t\t  </view>\r\n\t\t</scroll-view>\r\n\t</view>\n</template>\n\n<script setup lang='ts'>\n\timport { ref, computed ,getCurrentInstance,onMounted, onUnmounted} from 'vue';\r\n\timport { onShow } from '@dcloudio/uni-app';\r\n\timport { ChatMessage,ChatSession } from '../../static/interface/chat';\r\n\timport { useChatStore } from '../../store/chatStore';\r\n\timport { useUserStore } from '../../store/useUserStore';\r\n\timport websocketUtil from '../../script/webSocket';\r\n\timport {onLoad} from '@dcloudio/uni-app'\r\n\timport { url0,url1 } from '../../config';\r\n\tlet websocket: websocketUtil | null = null\r\n\t//let websocket = new websocketUtil(\"wss://192.168.43.78:8443/websocket/1\",5000)\r\n\tconst chatStore=useChatStore()\r\n\tconst userStore=useUserStore()\r\n\tconst userInfoCache = ref<Record<string, { username: string; avatar?: string }>>({})\r\n\t\r\n\tconst chatList = computed(() => {\r\n\t  return chatStore.sessions.map(session => {\r\n\t    const cachedInfo = userInfoCache.value[session.id]\r\n\t    return {\r\n\t      id: session.id,\r\n\t      username: cachedInfo?.username || '加载中...',\r\n\t      avatar: cachedInfo?.avatar || userStore.defaultImg,\r\n\t      lastMessage: session.lastMessage.content,\r\n\t      time: session.lastMessage.timestamp,\r\n\t      unread: session.unreadCount\r\n\t    }\r\n\t  })\r\n\t})\r\n\t\r\n\t//websocket\r\n\tconst initWebSocket = () => {\r\n\t  if (!userStore.currentUser?.id) return\r\n\t  \r\n\t  websocket = new websocketUtil(\r\n\t    url1+`${userStore.currentUser.id}`,\r\n\t    5000\r\n\t  )\r\n\t\r\n\t  websocket.getMessage((res:any)=>{\r\n\t  \tuni.__f__('log','at pages/communication/communication.vue:90',\"有人来消息了：\",res.sender)\r\n\t  \tif (chatStore.sessions.find(s => s.id === res.sender)) {\r\n\t  \t\tuni.__f__('log','at pages/communication/communication.vue:92',\"此消息的会话存在，不需要创建新的\")\r\n\t  \t}\r\n\t  \telse chatStore.createSession(res.sender)\r\n\t  \tconst a=Date.now()\r\n\t  \tconst s=a.toString()\r\n\t  \tchatStore.handleIncomingMessage({\r\n\t  \t\tid: s,\r\n\t  \t\tcontent: res.content,\r\n\t  \t\tsender: res.sender,\r\n\t  \t\treceiver: userStore.currentUser.id,\r\n\t  \t\ttimestamp:a\r\n\t  \t})\r\n\t    \tuni.__f__('log','at pages/communication/communication.vue:104',res);\r\n\t    })\r\n\t}\r\n\t\r\n\t\r\n\t// 获取并缓存用户信息\r\n\tconst fetchUserInfo = async (userId: string) => {\r\n\t\t\r\n\t  try {\r\n\t    const res :any= await uni.request({\r\n\t      url: url0+`/${userId}`,\r\n\t      method: 'POST',\r\n\t\t  data:userId,\r\n\t    })\r\n\t\tuni.__f__('log','at pages/communication/communication.vue:118',111111)\r\n\t    uni.__f__('log','at pages/communication/communication.vue:119',\"连接后端状态码：\",res.statusCode)\r\n\t    if (res.statusCode === 200) {\r\n\t      userInfoCache.value[userId] = {\r\n\t        username: res.data.name,\r\n\t        avatar: res.data.img\r\n\t      }\r\n\t    }\r\n\t  } catch (error) {\r\n\t    uni.__f__('error','at pages/communication/communication.vue:127','用户信息获取失败:', error)\r\n\t\treturn 0;\r\n\t  }\r\n\t}\r\n\t\r\n\t\r\n\t// 加载所有会话的用户信息\r\n\tconst loadSessionUsers = async () => {\r\n\t\tif(!userStore.meta.isLoggedin)return\r\n\t  const pendingRequests = chatStore.sessions\r\n\t    .filter(s => !userInfoCache.value[s.id])\r\n\t    .map(s => fetchUserInfo(s.id))\r\n\t\r\n\t  await Promise.all(pendingRequests)\r\n\t}\r\n\t\r\n\t\r\n\t// 生命周期\r\n\tonMounted(async () => {\r\n\t  initWebSocket()\r\n\t  await loadSessionUsers()\r\n\t})\r\n\t\r\n\tonUnmounted(() => {\r\n\t  websocket?.close()\r\n\t  uni.__f__('log','at pages/communication/communication.vue:152',\"关闭成功\")\r\n\t})\r\n\t\r\n\tonLoad(()=>{\r\n\t\t//userStore.currentUser=\r\n\t\tuni.__f__('log','at pages/communication/communication.vue:157',\"1234568:\",userStore.meta.isLoggedin)\r\n\t})\r\n\r\n\t// 刷新状态\r\n\tconst isRefreshing = ref(false);\r\n\tconst isLoading = ref(false);\r\n\t\r\n\t// 时间\r\n\tconst formatTime = (timestamp) => {\r\n\t  const date = new Date(timestamp);\r\n\t  const now = new Date();\r\n\t  \r\n\t  // 显示时间\r\n\t  if (date.toDateString() === now.toDateString()) {\r\n\t    return date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' });\r\n\t  }\r\n\t  if (date.getDate() === now.getDate() - 1) {\r\n\t    return '昨天';\r\n\t  }\r\n\t  return `${date.getMonth() + 1}/${date.getDate()}`;\r\n\t};\r\n\t\r\n\t\r\n\t// 点击聊天项\r\n\tconst handleChatClick = (chat:typeof chatList.value[number]) => {\r\n\t\tconst targetSession = chatStore.sessions.find(s => s.id === chat.id)\r\n\t\t\r\n\t\tif (targetSession) {\r\n\t\t\ttargetSession.unreadCount = 0\r\n\t\t\tchatStore.persistSessions()\r\n\t\t}\r\n\t\tchatStore.updatereceiverId(chat.id)\r\n\t\tuni.__f__('log','at pages/communication/communication.vue:189',\"会话id：\",chat.id)\r\n\t\tuni.navigateTo({\r\n\t\t\t url:`/pages/communicateDetails/communicateDetails?id=${chat.id}&username=${chat.username}&avatar=${encodeURIComponent(chat.avatar)}`\r\n\t\t});\r\n\t};\r\n\t\r\n\t  const handleAddChat = async () => {\r\n\t    uni.showModal({\r\n\t      title: \"添加会话\",\r\n\t      content: \"\",\r\n\t      editable: true,\r\n\t      placeholderText: \"请输入用户ID\",\r\n\t      success: async (res) => {\r\n\t        if (res.confirm) {\r\n\t          const id = res.content.trim();\r\n\t          if (!id) {\r\n\t            uni.showToast({ title: \"ID不能为空\", icon: \"none\" });\r\n\t            return;\r\n\t          }\r\n\t\r\n\t          // 检查是否已存在\r\n\t          if (chatStore.sessions.some(s => s.id === id)) {\r\n\t            uni.showToast({ title: \"会话已存在\", icon: \"none\" });\r\n\t            return;\r\n\t          }\r\n\t\r\n\t          try {\r\n\t            if(!await fetchUserInfo(id))return;\r\n\t            chatStore.createSession(id)\r\n\t            chatStore.persistSessions();\r\n\t            uni.showToast({ title: \"添加成功\" });\r\n\t          } catch (error) {\r\n\t            uni.showToast({ title: \"用户不存在\", icon: \"none\" });\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    });\r\n\t  };\n</script>\n\n<style lang=\"scss\" scoped>\n\t.main-container {\r\n\t  padding: 24rpx;\r\n\t  background-color: #f5f7fa;\r\n\t  min-height: 100vh;\r\n\t}\r\n\t.add-btn {\r\n\t  position: fixed;\r\n\t  right: 30rpx;\r\n\t  bottom: 120rpx;  // 调整到 tabbar 上方（根据实际 tabbar 高度调整）\r\n\t  z-index: 1000;\r\n\t  width: 90rpx;   // 改为圆形需要宽高一致\r\n\t  height: 90rpx;  // 改为圆形需要宽高一致\r\n\t  border-radius: 50%;  // 关键改动：变为圆形\r\n\t  background-color: #ffe900;\r\n\t  display: flex;\r\n\t  align-items: center;\r\n\t  justify-content: center;\r\n\t  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\r\n\t  transition: transform 0.2s; // 添加点击动效\r\n\t\r\n\t  &:active {\r\n\t    transform: scale(0.9); // 点击缩小效果\r\n\t  }\r\n\t\r\n\t  .btn-text {\r\n\t    color: black;\r\n\t    font-weight: 250;\r\n\t    font-size: 70rpx;  // 稍微减小字号\r\n\t    line-height: 1;     // 修正行高\r\n\t    margin-top: -8rpx;  // 微调垂直居中\r\n\t  }\r\n\t}\r\n\t.search-bar {\r\n\t  padding: 15rpx 30rpx;\r\n\t  background-color: #fff;\r\n\t}\r\n\t\r\n\t.chat-list {\r\n\t  height: calc(100vh - 120rpx);\r\n\t}\r\n\t\r\n\t.chat-item {\r\n\t  display: flex;\r\n\t  padding: 20rpx 30rpx;\r\n\t  border-bottom: 1rpx solid #f5f5f5;\r\n\t\r\n\t  .avatar-wrapper {\r\n\t    position: relative;\r\n\t    margin-right: 25rpx;\r\n\t\r\n\t    .avatar {\r\n\t      width: 90rpx;\r\n\t      height: 90rpx;\r\n\t      border-radius: 8rpx;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  .content {\r\n\t    flex: 1;\r\n\t    min-width: 0;\r\n\t\r\n\t    .header {\r\n\t      display: flex;\r\n\t      justify-content: space-between;\r\n\t      margin-bottom: 10rpx;\r\n\t\r\n\t      .name {\r\n\t        font-size: 34rpx;\r\n\t        color: #333;\r\n\t        max-width: 400rpx;\r\n\t        overflow: hidden;\r\n\t        text-overflow: ellipsis;\r\n\t        white-space: nowrap;\r\n\t      }\r\n\t\r\n\t      .time {\r\n\t        font-size: 24rpx;\r\n\t        color: #999;\r\n\t      }\r\n\t    }\r\n\t\r\n\t    .preview {\r\n\t      display: flex;\r\n\t      justify-content: space-between;\r\n\t\r\n\t      .message {\r\n\t        flex: 1;\r\n\t        font-size: 28rpx;\r\n\t        color: #999;\r\n\t        overflow: hidden;\r\n\t        text-overflow: ellipsis;\r\n\t        white-space: nowrap;\r\n\t        margin-right: 20rpx;\r\n\t      }\r\n\t\r\n\t      .status {\r\n\t        display: flex;\r\n\t        align-items: center;\r\n\t\r\n\t        .mute-icon {\r\n\t          margin-right: 10rpx;\r\n\t        }\r\n\t\r\n\t        .badge {\r\n\t          min-width: 36rpx;\r\n\t          height: 36rpx;\r\n\t          padding: 0 8rpx;\r\n\t          line-height: 36rpx;\r\n\t          text-align: center;\r\n\t          font-size: 22rpx;\r\n\t          color: white;\r\n\t          border-radius: 18rpx;\r\n\t          background-color: #999;\r\n\t\r\n\t          &-red {\r\n\t            background-color: #ff3b30;\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\n</style>\n","import MiniProgramPage from 'E:/uniappWorkSpace/SaltyFish/pages/communication/communication.vue'\nwx.createPage(MiniProgramPage)"],"names":["useChatStore","useUserStore","ref","computed","websocketUtil","url1","uni","s","url0","onMounted","onUnmounted","onLoad"],"mappings":"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"}